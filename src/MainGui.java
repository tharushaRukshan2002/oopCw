import javax.swing.*;import javax.swing.table.DefaultTableModel;import java.awt.*;import java.io.FileInputStream;import java.io.ObjectInputStream;import java.util.ArrayList;import java.util.Comparator;public class MainGui {    ArrayList<Formula1Driver> drivers = new ArrayList<>();    JFrame frame;    JTable table;    JPanel centerPanel, westPanel;    JTabbedPane tabbedPane;    Object[] columnNames = {"Name", "Team", "Country", "Points", "1st Places", "2nd Places"};    Object[][] rowData = new Object[drivers.size()][6];    public MainGui() {        readAndSortFile();        addDataToArray();        mainFrame();        subFrames();        addTabbedPane();        DefaultTableModel model = new DefaultTableModel(rowData,columnNames );        table = new JTable(model);        table.setRowHeight(50);        frame.setVisible(true);    }    /**     * Creates the main frame to add data      */    public void mainFrame() {        frame = new JFrame("F1 Championship manager");        frame.setSize(700, 500);        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        ImageIcon image = new ImageIcon("logo.png");        frame.setIconImage(image.getImage());        frame.setLayout(null);        frame.setResizable(false);    }    /**     * Creates the sub panels     */    public void subFrames() {        centerPanel = new JPanel();        westPanel = new JPanel();        westPanel.setBackground(Color.red);        westPanel.setBounds(0,0, 200,500);        centerPanel.setBackground(Color.YELLOW);        centerPanel.setBounds(200, 0,500,500);        frame.add(centerPanel, BorderLayout.CENTER);        centerPanel.setLayout(null);        frame.add(westPanel, BorderLayout.WEST);    }    /**     * Adding a tabbed pane     */    public void addTabbedPane(){        tabbedPane = new JTabbedPane();        tabbedPane.setBounds(50, 30,400,400);        centerPanel.add(tabbedPane);    }    public void readAndSortFile() {        try {            FileInputStream fis = new FileInputStream("drivers.ser");            ObjectInputStream ois = new ObjectInputStream(fis);            drivers = (ArrayList) ois.readObject();            ois.close();            drivers.sort(new Comparator<Formula1Driver>() {                @Override                public int compare(Formula1Driver o1, Formula1Driver o2) {                    int comparison;                    comparison = Integer.compare(o2.getTotalPoints(), o1.getTotalPoints());                    if (comparison == 0) {                        comparison = Integer.compare(o2.getFirstPositions(), o1.getFirstPositions());                    }                    return comparison;                }            });        } catch (Exception e) {            System.out.println("Error: " + e);        }    }    public void addDataToArray(){        for (int i = 0; i < drivers.size(); i++) {            rowData[i][0] = drivers.get(i).getName();            rowData[i][1] = drivers.get(i).getTeam();            rowData[i][2] = drivers.get(i).getCountry();            rowData[i][3] = drivers.get(i).getTotalPoints();            rowData[i][4] = drivers.get(i).getFirstPositions();            rowData[i][5] = drivers.get(i).getSecondPositions();        }    }}